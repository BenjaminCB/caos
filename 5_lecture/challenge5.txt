I ved nu alt om hvordan stacken er opbygget, og bruges pÃ¥ Linux IA32.

challenge5 er en binÃ¦r fil, compileret ud fra C-koden i bunden af denne tekst.

Udfordringen er, ved at give programmet et eller andet input (som ikke er det rigtige password), at skrive "access granted".
Programmet kÃ¸res som
./challenge5 1

Det kan vÃ¦re en fordel at bruge fÃ¸lgende mÃ¥de at give input pÃ¥, da 'echo -e' tillader at bruge hexadecimal notation:
echo -e "\x01\x02\x42" | ./challenge5 1
giver f.x. inputtet der svarer til disse bytes:
0x01 0x02 0x42 0x00

NÃ¥r I kommer til at crashe programmet kan I med kommandoen
dmesg | tail
fÃ¥ det seneste output fra operativsystemsloggen. F.x. vil en linje ala.
[506064.759877] challenge5[4661]: segfault at 414141 ip 0000000000414141 sp 00007ffdfd478ae0 error 14 in challenge5[600000+1000]
tolkes som at challenge5 crashede pÃ¥ adressen 0x414141

HINT! Disassemble programmet, rekonstruer hvad der ligger pÃ¥ stacken, og hvad I godt kunne tÃ¦nke jer der lÃ¥ pÃ¥ stacken i stedet!

================================================================================

#include <stdio.h>
#include <stdlib.h>

void level1() {
    int accessgranted = 0;
    char input[50];

    printf("Level 1.\nInput password: ");
    gets(input);

    if (!strcmp(input, "XXXXXXXXXXXXXXX"))
        accessgranted = 1;

    if (accessgranted) {
        printf("Level 1 access granted!\n");
    }
    else {
        printf("ACCESS DENIED!!!\n");
        exit(0);
    }
}

int level2accesscheck() {
    char input[50];

    printf("Level 2.\nInput password: ");
    gets(input);

    if (!strcmp(input, "XXXXXXXXXXXXXXXX"))
        return 1;
    return 0;
}

int level2accessgranted() {
    printf("Level 2 access granted!\n");
    exit(0);
}

void level2() {
    if (level2accesscheck()) {
        level2accessgranted();
    }
    else {
        printf("ACCESS DENIED!!!\n");
    }

}

int main(int argc, char **argv) {
    if (argc != 2) {
        printf("Need to specify security level (1 or 2) to access:\n");
        printf("./challenge5 1\n");
        exit(1);
    }

    if (!strcmp(argv[1], "1")) {
        level1();
    }
    else if (!strcmp(argv[1], "2")) {
        level2();
    }
    else {
        printf("Need to specify security level (1 or 2) to access, e.g.:\n");
        printf("./challenge5 1\n");
        exit(1);
    }
}
